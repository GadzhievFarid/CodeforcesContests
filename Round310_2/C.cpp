//Андроид Андреид — известный на всю галактику детектив.Сейчас он расследует дело о вандализме на выставке современного искусства.
//
//Главный экспонат выставки — конструкция из n матрешек — кукол, которые можно вкладывать друг в друга.
//Матрешки пронумерованы от 1 до n.Матрешку с меньшим номером можно вложить в матрешку с большим номером, 
//при этом две матрешки не могут вкладываться непосредственно в одну и ту же матрешку, но возможны цепочки вложения, например, 1 → 2 → 4 → 5.
//
//За одну секунду можно произвести любую из двух следующих операций.
//
//Если есть матрёшка a, никуда не вложенная, и матрёшка b, причём b не содержит никаких матрёшек и не вложена ни в какую другую матрёшку,
//можно поместить a в b;
//Если матрёшка a непосредственно содержится в матрёшке b, причём b не вложена ни в какую другую матрёшку, можно достать a из b.
//Согласно современным эстетическим нормам матрешки на выставке были собраны в определенной конфигурации, 
//то есть в виде нескольких отдельных цепочек вложенных матрёшек, однако преступник, следуя загадочному плану, 
//разобрал все матрёшки и собрал их в одну большую цепочку(1 → 2 → ... → n).Для продолжения расследования Андреиду необходимо узнать, 
//за какое минимальное время это возможно сделать.
//
//Входные данные
//В первой строке даны целые числа n(1 ≤ n ≤ 105) и k(1 ≤ k ≤ 105) — количество матрешек и цепочек матрёшек в изначальной конфигурации.
//
//В следующих k строках даны описания цепочек : в i - й строке сначала идет число mi(1 ≤ mi ≤ n),
//а затем mi чисел ai1, ai2, ..., aimi — номера матрешек в цепочке(матрёшка ai1 вложена в матрёшку ai2, 
//которая вложена в матрёшку ai3, и так вплоть до матрёшки aimi, которая не вложена ни в какую другую матрёшку).
//
//Гарантируется, что m1  + m2  + ... + mk  = n, номера всех матрешек во всех цепочках различны, в каждой цепочке номера матрешек идут по возрастанию.
//
//Выходные данные
//В единственной строке выведите минимальное количество секунд, за которое можно из изначальной конфигурации собрать одну большую цепочку.

#include <iostream>

using namespace std;

int main(){
	int n, k, l = 1, temp, a, b;
	cin >> n >> k;
	for (int i = 0; i < k; ++i){
		cin >> temp;
		int* arr = new int[temp];
		for (int j = 0; j < temp; ++j){
			cin >> arr[j];
		}
		if (arr[0] == 1){
			for (int j = 1; j < temp; ++j){
				if (arr[j] == arr[j - 1] + 1)
					l++;
				else{
					break;
				}
			}
			delete[] arr;
			break;
		}
		delete[]arr;
	}
	cout << 2 * n - 2 * l - k + 1;
	system("pause");
	return 0;
}